<apex:page docType="html-5.0" standardController="Opportunity" extensions="ehsSignatureExtensionController">
	<script>
	var $j = jQuery.noConflict();
	</script>
	<apex:stylesheet value="{!URLFOR($Resource.jquerymobile,'/jquerymobile/jquery.mobile-1.3.2.min.css')}" />
	<apex:includeScript value="{!URLFOR($Resource.jquery)}" />
	<apex:includeScript value="{!URLFOR($Resource.jquerymobile,'/jquerymobile/jquery.mobile-1.3.2.min.js')}" />
	<canvas id="signatureCanvas" width="700" height="400" style="border: 1px solid grey;" />
	<apex:includeScript value="/soap/ajax/28.0/connection.js" />
	<apex:stylesheet value="{! $Resource.SurveyForce + '/surveyforce.css'}" />
	<apex:stylesheet value="{! $Resource.SurveyForce_SLDS + '/assets/styles/salesforce-lightning-design-system-vf.min.css'}" />
	<script>
		sforce.connection.sessionId = "{!$Api.Session_Id}";
		var canvas = document.getElementById("signatureCanvas");
		var context = canvas.getContext("2d");
		var mouseButton = 0;
		var lastX = lastY = null;
		var ehsId = '{!Opportunity.Id}';

		function saveSignature() {

			var image = canvas.toDataURL().split(',')[1];
			ehsSignatureExtensionController.saveSignature(ehsId, image, handleResult);
		}

		function handleResult(result, event) {
			if (result.success) {
				window.top.location.href = '/' + ehsId;
			} else {
				alert('Error: ' + result.errorMessage);
			}
		}

		function handleEvent(event) {
			if (event.type === "mousedown" || event.type === "touchstart") {
				mouseButton = event.which || 1;
				lastX = lastY = null;
			}
			if (event.type === "touchcancel" || event.type === "touchcancel" || event.type === "mouseup") {
				mouseButton = 0;
				lastX = lastY = null;
			}
			if ((event.type === "touchmove" || event.type === "mousemove") && mouseButton) {
				var newX, newY;
				var canvasX = 0,
					canvasY = 0,
					obj = event.srcElement || event.target;
				do {
					canvasX += obj.offsetLeft;
					canvasY += obj.offsetTop;
				} while (obj = obj.offsetParent);
				if (event.targetTouches && event.targetTouches.length) {
					newX = event.targetTouches[0].clientX - (canvasX / 2);
					newY = event.targetTouches[0].clientY - (canvasY / 2);
				} else {
					newX = event.offsetX;
					newY = event.offsetY;
				}
				if (!lastX && !lastY) {
					lastX = newX;
					lastY = newY;
					context.beginPath();
					context.moveTo(lastX, lastY);
					context.lineTo(lastX, lastY, lastX, lastY);
					context.stroke();
				} else {
					context.beginPath();
					context.moveTo(lastX, lastY);
					context.lineTo(newX, newY);
					context.stroke();
					lastX = newX;
					lastY = newY;
				}
			}
			if (event.type == "touchmove" || event.type === "mousedrag" || (event.type === "selectstart" && (event.srcElement || event.target) === canvas)) {
				event.returnValue = false;
				event.stopPropagation();
				event.preventDefault();
				return false;
			}
		}

		canvas.addEventListener("mousedrag", handleEvent, true);
		canvas.addEventListener("mousemove", handleEvent, true);
		canvas.addEventListener("mousedown", handleEvent, true);
		window.addEventListener("mouseup", handleEvent, true);
		canvas.addEventListener("touchstart", handleEvent, true);
		canvas.addEventListener("touchmove", handleEvent, true);
		window.addEventListener("touchend", handleEvent, true);
		window.addEventListener("selectstart", handleEvent, true);
	</script>
	<apex:form >
		<button class="slds-button slds-button_stateful slds-not-selected slds-button_brand "
		onclick="saveSignature()">Capture Signature</button>
		<apex:commandButton styleClass="slds-button slds-button--brand" action="{!cancel}" value="Exit" />
	</apex:form>
</apex:page>